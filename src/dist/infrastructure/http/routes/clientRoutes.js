"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const clientRouter = express_1.default.Router();
const refreshToken_1 = __importDefault(require("../middlewares/auth/refreshToken"));
const clientCtrl_1 = require("../controllers/clientCtrl");
const userCtrl_1 = require("../controllers/userCtrl");
const verifyToken_1 = require("../middlewares/auth/verifyToken");
const requireRole_1 = require("../middlewares/auth/requireRole");
const enums_1 = require("../../../helper/constants/enums");
const { signupClient, verifyOtp, resendOtp, loginClient, verifyEmail, resetPassword, googleLogin, logoutClient, getHomeClient, trendingJobs, getSelectedJobs, getProposals, viewContracts, makePayment, createJobPost, getProfile, profileVerification, editProfile, getUserProfile, createContract, viewSubmissions, getallDevelopers, closeContract, rejectContract, viewWallet, inviteUser, listAllJobs, getSingleJobPost, rejectProposal, getAllNotifications, getAllChats, viewChat, rateAndReview, sendMessage, viewInvite, searchDevlopers } = clientCtrl_1.clientController;
const { viewSingleContract } = userCtrl_1.userController;
const { CLIENT } = enums_1.allRoles;
clientRouter.get("/getHome", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getHomeClient);
clientRouter.get("/trendingJobs", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), trendingJobs);
clientRouter.get("/profile", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getProfile);
clientRouter.get("/userProfile/:userId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getUserProfile);
clientRouter.get("/developers", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getallDevelopers);
clientRouter.get("/listAllJobs", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), listAllJobs);
clientRouter.get('/jobs/:jobsType', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getSelectedJobs);
clientRouter.get('/job/:jobPostId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getSingleJobPost);
clientRouter.get("/proposals/:proposalType", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getProposals);
clientRouter.get('/contracts/:contractViewType', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), viewContracts);
clientRouter.get("/contract/:contractId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), viewSingleContract);
clientRouter.get("/invites/:inviteType", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), viewInvite);
clientRouter.get("/contractsSubmissions", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), viewSubmissions);
clientRouter.get("/wallet", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), viewWallet);
clientRouter.get("/allChat/view/:roleId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getAllChats);
clientRouter.get("/chat/view/:roleType/:roleId/:targetId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), viewChat);
clientRouter.get("/notifications/:clientId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), getAllNotifications);
clientRouter.post("/projectApprove", closeContract);
clientRouter.post("/jobPaymentStripe", makePayment);
clientRouter.post("/paymentSuccess", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), createJobPost);
clientRouter.post("/profile/verify", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), profileVerification);
clientRouter.post("/profile/edit", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), editProfile);
clientRouter.post('/searchDevelopers', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), searchDevlopers);
clientRouter.post('/createContract', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), createContract);
clientRouter.post("/chat/sendMessage", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), sendMessage);
clientRouter.post("/contractSubmitReject/:contractId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), rejectContract);
clientRouter.post('/inviteUser', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), inviteUser);
clientRouter.post("/rate-user/:notificationId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), rateAndReview);
clientRouter.put('/proposalReject', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(CLIENT), rejectProposal);
clientRouter.post("/signup", signupClient);
clientRouter.post("/verify-otp", verifyOtp);
clientRouter.post("/resend-otp", resendOtp);
clientRouter.post("/login", loginClient);
clientRouter.post("/verify-email", verifyEmail);
clientRouter.post("/resetPassword/:clientId", resetPassword);
clientRouter.post("/googleLogin", googleLogin);
clientRouter.post("/logout", logoutClient);
clientRouter.post('/refresh-token', refreshToken_1.default);
exports.default = clientRouter;
