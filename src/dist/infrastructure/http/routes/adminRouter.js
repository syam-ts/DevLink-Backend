"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const adminRouter = express_1.default.Router();
const adminCtrl_1 = require("../controllers/adminCtrl");
const verifyToken_1 = require("../middlewares/auth/verifyToken");
const refreshToken_1 = __importDefault(require("../middlewares/auth/refreshToken"));
const requireRole_1 = require("../middlewares/auth/requireRole");
const enums_1 = require("../../../helper/constants/enums");
const { getDashboard, getAllUsers, getAllClients, viewWallet, loginAdmin, successMoneyTransfer, viewContracts, getRequests, getRequestedClient, viewRoleInfo, getWallet, logoutAdmin, sortClient, verifyAccept, blockUser, unBlockUser, blockClient, unBlockClient, getAllContracts, viewSingleContract, getWithdrawRequests } = adminCtrl_1.adminController;
const { ADMIN } = enums_1.allRoles;
adminRouter.get('/getDashboard/:range', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), getDashboard);
adminRouter.get('/getAllUsers', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), getAllUsers);
adminRouter.get('/getAllClients', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), getAllClients);
adminRouter.get('/wallet', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), viewWallet);
adminRouter.get('/getRequests', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), getRequests);
adminRouter.get('/getWithdrawRequests', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), getWithdrawRequests);
adminRouter.post('/successMoneyTransfer', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), successMoneyTransfer);
adminRouter.get('/viewContracts', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), viewContracts);
adminRouter.get('/contract/:contractId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), viewContracts);
adminRouter.get('/revenue', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), viewContracts);
adminRouter.get('/userMetrics', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), viewContracts);
adminRouter.get('/clientMetrics', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), viewContracts);
adminRouter.get('/request/getRequestedClient/:clientId', getRequestedClient);
adminRouter.get('/viewRole/:roleId/:roleInfo', viewRoleInfo);
adminRouter.get('/getWallet', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), getWallet);
adminRouter.get('/getAllContracts', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), getAllContracts);
adminRouter.get('/viewSingleContract/:contractId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), viewSingleContract);
// adminRouter.post('/signup', adminController.signUpAdmin);
adminRouter.post('/login', loginAdmin);
adminRouter.post('/logout', logoutAdmin);
adminRouter.post('/refresh-token', refreshToken_1.default);
adminRouter.post('/getAllClients/sort?', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), sortClient);
adminRouter.put('/verifyClient/accept', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), verifyAccept);
adminRouter.patch('/blockUser/:userId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), blockUser);
adminRouter.patch('/unBlockUser/:userId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), unBlockUser);
adminRouter.patch('/blockClient/:clientId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), blockClient);
adminRouter.patch('/unBlockClient/:clientId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(ADMIN), unBlockClient);
exports.default = adminRouter;
