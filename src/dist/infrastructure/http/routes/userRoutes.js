"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userRouter = express_1.default.Router();
const userCtrl_1 = require("../controllers/userCtrl");
const verifyToken_1 = require("../middlewares/auth/verifyToken");
const clientCtrl_1 = require("../controllers/clientCtrl");
const refreshToken_1 = __importDefault(require("../middlewares/auth/refreshToken"));
const requireRole_1 = require("../middlewares/auth/requireRole");
const enums_1 = require("../../../helper/constants/enums");
const { signupUser, verifyOtp, resendOtp, verifyEmail, resetPassword, loginUser, googleLogin, logoutUser, getHomeUser, listHomeJobs, getSelectedJobs, viewProposals, viewContracts, getProfile, alterProfile, boostAccount, bosstSuccess, viewAllWishlist, addToWishlist, removeFromWishlist, viewWalletUser, getSingleJobPost, createProposal, viewSingleContract, withdrawMoneyByUser, searchJobs, submitProject, getAllInvites, rejectInvite, chatbot, allNotifications, } = userCtrl_1.userController;
const { USER } = enums_1.allRoles;
userRouter.get('/getHome', getHomeUser);
userRouter.get('/home/:type', listHomeJobs);
userRouter.get('/jobs/:jobsType', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), getSelectedJobs);
userRouter.get('/proposals/:proposalType', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), viewProposals);
userRouter.get('/contracts/:contractViewType', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), viewContracts);
userRouter.get('/profile/:type', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), getProfile);
userRouter.get('/wishlist', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), viewAllWishlist);
userRouter.get('/job/:jobPostId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), getSingleJobPost);
userRouter.get("/contract/:contractId", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), viewSingleContract);
userRouter.get('/notifications/:userId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), allNotifications);
userRouter.get('/allChat/view/:roleId', clientCtrl_1.clientController.getAllChats);
userRouter.get('/chat/:memberId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), clientCtrl_1.clientController.getAllChats);
userRouter.get("/invites", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), getAllInvites);
userRouter.get("/chat/view/:roleType/:roleId/:targetId", clientCtrl_1.clientController.viewChat);
userRouter.get("/wallet", verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), viewWalletUser);
userRouter.post('/addToWishlist', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), addToWishlist);
userRouter.post('/boostProfile', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), boostAccount);
userRouter.post('/withdrawMoney', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), withdrawMoneyByUser);
userRouter.post('/createProposal', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), createProposal);
userRouter.post('/searchJobs', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), searchJobs);
userRouter.post('/signup', signupUser);
userRouter.post('/verify-otp', verifyOtp);
userRouter.post('/resend-otp', resendOtp);
userRouter.post('/verify-email', verifyEmail);
userRouter.post('/resetPassword/:userId', resetPassword);
userRouter.post('/login', loginUser);
userRouter.post('/googleLogin', googleLogin);
userRouter.post('/logout', logoutUser);
userRouter.post('/project/submit/:contractId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), submitProject);
userRouter.post('/chat/sendMessage', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), clientCtrl_1.clientController.sendMessage);
userRouter.post('/chatbot', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), chatbot);
userRouter.post('/refresh-token', refreshToken_1.default);
userRouter.put('/profileAlter/:type', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), alterProfile);
userRouter.patch('/profileBoostSuccess', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), bosstSuccess);
userRouter.patch('/invite-reject/:inviteId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), rejectInvite);
userRouter.patch('/removeFromWishlist/:wishlistId', verifyToken_1.verifyToken, (0, requireRole_1.requireRole)(USER), removeFromWishlist);
exports.default = userRouter;
